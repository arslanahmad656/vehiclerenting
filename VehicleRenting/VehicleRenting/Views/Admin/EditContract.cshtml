@model VehicleRenting.Models.Contract

@{
    ViewBag.Title = "EditContract";
}

<header class="title text-left">
    <h1>
        Edit Contract Details
    </h1>
    <hr />
</header>


@using (Html.BeginForm("EditContract", "Admin", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div>
        <p>@Html.ValidationMessageFor(model => model.VehicleId, "", new { @class = "text-danger" })</p>
        <p>@Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })</p>
        <p>@Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })</p>
        <p>@Html.ValidationMessageFor(model => model.DocumentPath, "", new { @class = "text-danger" })</p>
        <p>@Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })</p>
    </div>
        <div class="form-group">
            <div class="label-box">
                @Html.LabelFor(model => model.VehicleId, "VehicleId", htmlAttributes: new { @class = "" })
            </div>
            <div class="input-box">
                @Html.DropDownList("VehicleId", null, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="label-box">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "" })
            </div>
            <div class="input-box">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "", type = "text" } })
            </div>
        </div>

        <div class="form-group">
            <div class="label-box">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "" })
            </div>
            <div class="input-box">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "", type = "text" } })
            </div>
        </div>

        <div class="form-group">
            <div class="label-box">
                @Html.LabelFor(model => model.DocumentPath, htmlAttributes: new { @class = "" })
            </div>
            <div class="input-box">
                <input type="file" id="DocumentPath" name="DocumentPath" />
            </div>
        </div>

        <div class="form-group">
            <div class="label-box" style="vertical-align: top;">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "" })
            </div>
            <div class="input-box">
                @Html.TextAreaFor(model => model.Notes, new { rows = "7" })
            </div>
        </div>

        <div class="form-group">
            <div class="label-box" style="vertical-align: top;">
                &nbsp;
            </div>
            <div class="input-box">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
}

<div>
    <span class="fa fa-arrow-circle-left"></span><a href="@Url.Action("ContractIndex")">Back to List</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
